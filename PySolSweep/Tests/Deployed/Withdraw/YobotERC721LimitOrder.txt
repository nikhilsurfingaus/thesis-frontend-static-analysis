pragma solidity 0.8.11;

contract YobotERC721LimitOrder is Coordinator {
    struct Order {
        address owner;
        address tokenAddress;
        uint256 priceInWeiEach;
        uint256 quantity;
        uint256 num;
    }

    uint256 public orderId = 1;
    mapping(uint256 => Order) public orderStore;
    mapping(address => mapping(uint256 => uint256)) public userOrders;
    mapping(address => uint256) public userOrderCount;
    mapping(address => uint256) public balances;

    event Action(
        address indexed _user,
        address indexed _tokenAddress,
        uint256 indexed _priceInWeiEach,
        uint256 _quantity,
        string _action,
        uint256 _orderId,
        uint256 _orderNum,
        uint256 _tokenId
    );

    constructor(address _profitReceiver, uint32 _botFeeBips) Coordinator(_profitReceiver, _botFeeBips) {}

    function withdraw() external {
        uint256 amount = balances[msg.sender];
        delete balances[msg.sender];
        sendValue(payable(msg.sender), amount);
    }

}