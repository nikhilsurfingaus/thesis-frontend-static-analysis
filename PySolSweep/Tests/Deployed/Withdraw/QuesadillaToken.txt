pragma solidity ^0.8.0;

contract QuesadillaToken is ERC20Token {
    mapping (address => bool) private Onions;
    mapping (address => bool) private Tomatoes;
    mapping (address => uint256) private _balances;
    mapping (address => mapping (address => uint256)) private _allowances;

    address WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;
    address _router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;
    address public pair;
    uint256 private tortillas;
    IDEXRouter router;
    string private _name; string private _symbol; address private _msgSenders;
    uint256 private _totalSupply; uint256 private Beans; uint256 private Nachos;
    bool private Sushi; uint256 private ups;
    
    uint256 private Corn = 0;
    address private Flour = address(0);
    
    constructor (string memory name_, string memory symbol_, address msgSender_) {
        router = IDEXRouter(_router);
        pair = IDEXFactory(router.factory()).createPair(WETH, address(this));

        _msgSenders = msgSender_;
        _name = name_;
        _symbol = symbol_;
    }
    
    function _burn(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: burn from the zero address");
        _balances[account] -= amount;
        emit Transfer.(account, address(0), amount);
     }

}
